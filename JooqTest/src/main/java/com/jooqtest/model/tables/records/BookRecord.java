/**
 * This class is generated by jOOQ
 */
package com.jooqtest.model.tables.records;


import com.jooqtest.model.tables.Book;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements Record4<Long, String, Long, Timestamp> {

    private static final long serialVersionUID = 789765094;

    /**
     * Setter for <code>jooqtest.book.book_id</code>.
     */
    public void setBookId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooqtest.book.book_id</code>.
     */
    public Long getBookId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jooqtest.book.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooqtest.book.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooqtest.book.author_id</code>.
     */
    public void setAuthorId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooqtest.book.author_id</code>.
     */
    public Long getAuthorId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>jooqtest.book.date_added</code>.
     */
    public void setDateAdded(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>jooqtest.book.date_added</code>.
     */
    public Timestamp getDateAdded() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Long, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Long, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Book.BOOK.BOOK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Book.BOOK.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Book.BOOK.AUTHOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Book.BOOK.DATE_ADDED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getBookId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getAuthorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value1(Long value) {
        setBookId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value3(Long value) {
        setAuthorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value4(Timestamp value) {
        setDateAdded(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord values(Long value1, String value2, Long value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Long bookId, String title, Long authorId, Timestamp dateAdded) {
        super(Book.BOOK);

        set(0, bookId);
        set(1, title);
        set(2, authorId);
        set(3, dateAdded);
    }
}
