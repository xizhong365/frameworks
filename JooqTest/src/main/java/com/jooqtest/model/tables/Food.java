/**
 * This class is generated by jOOQ
 */
package com.jooqtest.model.tables;


import com.jooqtest.model.Jooqtest;
import com.jooqtest.model.Keys;
import com.jooqtest.model.tables.records.FoodRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Food extends TableImpl<FoodRecord> {

    private static final long serialVersionUID = 13637520;

    /**
     * The reference instance of <code>jooqtest.food</code>
     */
    public static final Food FOOD = new Food();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FoodRecord> getRecordType() {
        return FoodRecord.class;
    }

    /**
     * The column <code>jooqtest.food.id</code>.
     */
    public final TableField<FoodRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>jooqtest.food.kind</code>.
     */
    public final TableField<FoodRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>jooqtest.food</code> table reference
     */
    public Food() {
        this("food", null);
    }

    /**
     * Create an aliased <code>jooqtest.food</code> table reference
     */
    public Food(String alias) {
        this(alias, FOOD);
    }

    private Food(String alias, Table<FoodRecord> aliased) {
        this(alias, aliased, null);
    }

    private Food(String alias, Table<FoodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jooqtest.JOOQTEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FoodRecord> getPrimaryKey() {
        return Keys.KEY_FOOD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FoodRecord>> getKeys() {
        return Arrays.<UniqueKey<FoodRecord>>asList(Keys.KEY_FOOD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Food as(String alias) {
        return new Food(alias, this);
    }

    /**
     * Rename this table
     */
    public Food rename(String name) {
        return new Food(name, null);
    }
}
